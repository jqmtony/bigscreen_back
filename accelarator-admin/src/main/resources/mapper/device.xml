<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gochinatv.accelarator.dao.DeviceDao">

	<resultMap type="Device" id="Device">
		<id property="id" column="id" />
		<result property="code" column="code" />
		<result property="brand" column="brand" />
		<result property="model" column="model" />
		<result property="mac" column="mac" />
		<result property="placeId" column="place_id" />
		<result property="businessId" column="business_id" />
		<result property="screenNum" column="screen_num" />
		<result property="createTime" column="create_time" />
		<result property="status" column="status" />
		
		<result property="cname" column="cname" />
		<result property="userName" column="user_name" />
	</resultMap>
	<select id="getListByEntity" resultMap="Device" parameterType="Device">
		select d.*, p.cname, b.user_name from device d 
		left join place p on d.place_id=p.id
		left join business b on d.business_id=b.id
		<where>
			1=1
			<if test="code!=null">
				and code like CONCAT(CONCAT('%',#{code}),'%')
			</if>
			<if test="brand!=null">
				and brand like CONCAT(CONCAT('%',#{brand}),'%')
			</if>
		</where>
		order by create_time desc
	</select>
	
	<insert id="save" parameterType="Device">
	   insert into device(
	            code,
	            brand,
	            model,
	            mac,
	            place_id,
	            business_id,
	            screen_num,
	            create_time,
	            status
	            ) values (
	            #{code},
	            #{brand},
	            #{model},
	            #{mac},
	            #{placeId},
	            #{businessId},
	            #{screenNum},
	            #{createTime},
	            #{status}
	            )
	</insert>
	
	<update id="update" parameterType="Device">
		update device
		<set>
			code=#{code},
            brand=#{brand},
            model=#{model},
            mac=#{mac},
            place_id=#{placeId},
            business_id=#{businessId},
            screen_num=#{screenNum},
            status=#{status}
		</set>
		where id = #{id}
	</update>
	
	<delete id="deleteByEntity" parameterType="Device">
	  delete from device where id = #{id}
	</delete>
</mapper>