<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gochinatv.accelarator.dao.PlaceDao">

	<resultMap type="Place" id="Place">
		<id property="id" column="id" />
		<result property="cname" column="cname" />
		<result property="ename" column="ename" />
		<result property="type" column="type" />
		<result property="scale" column="scale" />
		<result property="averageDailyFlow" column="average_daily_flow" />
		<result property="country" column="country" />
		<result property="area" column="area" />
		<result property="city" column="city" />
		<result property="address" column="address" />
		<result property="zipCode" column="zip_code" />
		<result property="businessId" column="business_id" />
		<result property="createTime" column="create_time" />
	</resultMap>
	
	<select id="getListByEntity" resultMap="Place" parameterType="Place">
		select * from place 
		<where>
			1=1
			<if test="cname!=null">
				and cname like CONCAT(CONCAT('%',#{cname}),'%')
			</if>
			<if test="ename!=null">
				and ename like CONCAT(CONCAT('%',#{ename}),'%')
			</if>
			<if test="type!=null and type!=0">
				and type = #{type}
			</if>
			<if test="country!=null and country!=0">
				and country = #{country}
			</if>
			<if test="area!=null and area!=0">
				and area = #{area}
			</if>
			<if test="city!=null and city!=0">
				and city = #{city}
			</if>
			order by create_time desc
		</where>
	</select>
	
	<select id="getEntityById" resultMap="Place" parameterType="int">
		select * from place where id=#{id}
	</select>
	
	<insert id="save" parameterType="Place">
	   insert into place(
	            cname,
	            ename,
	            type,
	            scale,
	            average_daily_flow,
	            country,
	            area,
	            city,
	            address,
	            zip_code,
	            business_id,
	            create_time
	            ) values (
	            #{cname},
	            #{ename},
	            #{type},
	            #{scale},
	            #{averageDailyFlow},
	            #{country},
	            #{area},
	            #{city},
	            #{address},
	            #{zipCode},
	            #{businessId},
	            #{createTime}
	            )
	</insert>
	
	<update id="update" parameterType="Place">
		update place
		<set>
			cname=#{cname},
            ename=#{ename},
            type=#{type},
            scale=#{scale},
            average_daily_flow=#{averageDailyFlow},
            country=#{country},
            area=#{area},
            city=#{city},
            address=#{address},
            zip_code=#{zipCode},
            business_id=#{businessId}            
		</set>
		where id = #{id}
	</update>
	
	<delete id="deleteByEntity" parameterType="Place">
	  delete from place where id = #{id}
	</delete>
	
	

</mapper>